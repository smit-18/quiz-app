{"version":3,"sources":["components/Question.js","App.js","index.js"],"names":["Question","setScore","setShowScore","questions","useState","currentQuestion","setCurrentQuestion","className","length","questionText","answerOptions","map","answerOption","idx","key","onClick","isCorrect","prevScore","nextQuestion","handleAnswerOptionClick","answerText","App","showScore","score","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0yDA0CeA,EAxCE,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAAe,EAEVC,mBAAS,GAFC,mBAEjDC,EAFiD,KAEhCC,EAFgC,KAiBxD,OACE,oCACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,kBACb,0CAAgBF,EAAkB,GADpC,IAC+CF,EAAUK,QAEzD,yBAAKD,UAAU,iBACZJ,EAAUE,GAAiBI,eAGhC,yBAAKF,UAAU,kBACZJ,EAAUE,GAAiBK,cAAcC,KAAI,SAACC,EAAcC,GAAf,OAC5C,4BAAQC,IAAKD,EACXE,QAAS,kBA1Ba,SAACC,GAC3BA,GACFf,GAAS,SAACgB,GAAD,OAAeA,EAAY,KAGtC,IAAMC,EAAeb,EAAkB,EACnCa,EAAef,EAAUK,OAC3BF,EAAmBY,GAEnBhB,GAAa,GAiBQiB,CAAwBP,EAAaI,aAEnDJ,EAAaQ,kB,OCNXC,EAxBH,WAAO,IAAD,EACkBjB,oBAAS,GAD3B,mBACTkB,EADS,KACEpB,EADF,OAEUE,mBAAS,GAFnB,mBAETmB,EAFS,KAEFtB,EAFE,KAIhB,OACE,oCACE,wBAAIM,UAAU,WAAd,kBACA,yBAAKA,UAAU,OACZe,EACC,yBAAKf,UAAU,iBAAf,cACcgB,EADd,WAC6BpB,EAAUK,QAGvC,kBAAC,EAAD,CACEP,SAAUA,EACVC,aAAcA,EACdC,UAAWA,OCfvBqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5f40d628.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Question = ({setScore, setShowScore, questions}) => {\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore((prevScore) => prevScore + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true)\n    }\n  };\n\n  return (\n    <>\n      <div className=\"question-section\">\n        <div className=\"question-count\">\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\n        </div>\n        <div className=\"question-text\">\n          {questions[currentQuestion].questionText}\n        </div>\n      </div>\n      <div className=\"answer-section\">\n        {questions[currentQuestion].answerOptions.map((answerOption, idx) => (\n          <button key={idx}\n            onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}\n          >\n            {answerOption.answerText}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Question;\n","import React, { useState } from \"react\";\nimport Question from \"./components/Question\";\nimport questions from \"./data/questions.json\";\n\nconst App = () => {\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  return (\n    <>\n      <h1 className=\"heading\">React Quiz App</h1>\n      <div className=\"app\">\n        {showScore ? (\n          <div className=\"score-section\">\n            You scored {score} out of {questions.length}\n          </div>\n        ) : (\n          <Question\n            setScore={setScore}\n            setShowScore={setShowScore}\n            questions={questions}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}